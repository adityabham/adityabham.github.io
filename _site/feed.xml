<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-11-07T18:44:18-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Aditya Bhamidipati</title><subtitle>Electrical Engineering Student at Northeastern University | Machine Intelligence Intern at Draper</subtitle><entry><title type="html">Gaussian Process Particle Filter (GPPF)</title><link href="http://localhost:4000/gppf/2020/11/04/GPPF.html" rel="alternate" type="text/html" title="Gaussian Process Particle Filter (GPPF)" /><published>2020-11-04T19:40:06-05:00</published><updated>2020-11-04T19:40:06-05:00</updated><id>http://localhost:4000/gppf/2020/11/04/GPPF</id><content type="html" xml:base="http://localhost:4000/gppf/2020/11/04/GPPF.html">&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;
&lt;p&gt;Topic: Enhancing Particle Filtering using Gaussian Processes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Goal: Present an approach to Sequential Bayesian filtering that leverages both Monte Carlo algorithms and Gaussian process regression.&lt;/li&gt;
  &lt;li&gt;Developed a Gaussian Process Particle Filter (GPPF) and resampling scheme utilizing Python and MATLAB to more accurately approximate the posterior distribution of some stochastic process from a set of random measures while addressing the issue of particle degeneracy in the context of Bayesian inference.&lt;/li&gt;
  &lt;li&gt;In the process of generating a simulation, in Python, of a robot moving throughout a grid where the GPPF is utilized to estimate and track the robot’s position quantifying the performance of the GPPF.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://imgur.com/LX4r3cq&quot; alt=&quot;test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="GPPF" /><summary type="html">Description Topic: Enhancing Particle Filtering using Gaussian Processes Goal: Present an approach to Sequential Bayesian filtering that leverages both Monte Carlo algorithms and Gaussian process regression. Developed a Gaussian Process Particle Filter (GPPF) and resampling scheme utilizing Python and MATLAB to more accurately approximate the posterior distribution of some stochastic process from a set of random measures while addressing the issue of particle degeneracy in the context of Bayesian inference. In the process of generating a simulation, in Python, of a robot moving throughout a grid where the GPPF is utilized to estimate and track the robot’s position quantifying the performance of the GPPF.</summary></entry></feed>